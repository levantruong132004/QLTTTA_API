@model PaginatedViewModel<StudentViewModel>
@{
    ViewData["Title"] = "Quản lý học viên";
}

<style>
    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .search-box {
        display: flex;
        gap: 0.5rem;
        flex: 1;
        max-width: 500px;
    }

    .search-input:focus {
        border-color: #5a67d8;
        box-shadow: 0 0 0 3px rgba(90, 103, 216, 0.1);
        outline: none;
    }

    .btn-primary {
        background: linear-gradient(135deg, #5a67d8, #667eea);
        border: none;
        border-radius: 12px;
        color: white;
        font-weight: 600;
        padding: 12px 20px;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(90, 103, 216, 0.3);
        color: white;
        text-decoration: none;
    }

    .btn-secondary {
        background: #718096;
        border: none;
        border-radius: 12px;
        color: white;
        font-weight: 600;
        padding: 12px 16px;
        transition: all 0.3s ease;
    }

    .btn-secondary:hover {
        background: #4a5568;
        transform: translateY(-1px);
    }

    .btn-success {
        background: #48bb78;
        border: none;
        border-radius: 8px;
        color: white;
        font-weight: 500;
        padding: 8px 12px;
        font-size: 0.875rem;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .btn-success:hover {
        background: #38a169;
        transform: translateY(-1px);
        color: white;
        text-decoration: none;
    }

    .btn-warning {
        background: #ed8936;
        border: none;
        border-radius: 8px;
        color: white;
        font-weight: 500;
        padding: 8px 12px;
        font-size: 0.875rem;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .btn-warning:hover {
        background: #dd6b20;
        transform: translateY(-1px);
        color: white;
        text-decoration: none;
    }

    .btn-danger {
        background: #f56565;
        border: none;
        border-radius: 8px;
        color: white;
        font-weight: 500;
        padding: 8px 12px;
        font-size: 0.875rem;
        transition: all 0.3s ease;
    }

    .btn-danger:hover {
        background: #e53e3e;
        transform: translateY(-1px);
    }

    .table-container {
        background: white;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }

    .table {
        margin: 0;
    }

    .table thead {
        background: linear-gradient(90deg, #667eea, #764ba2);
    }

    .table thead th {
        border: none;
        color: white;
        font-weight: 600;
        padding: 20px 15px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.875rem;
    }

    .table tbody td {
        border-color: #e2e8f0;
        padding: 18px 15px;
        vertical-align: middle;
        font-size: 0.9rem;
    }

    .student-row {
        transition: all 0.3s ease;
    }

    .student-row:hover {
        background-color: #f8fafc;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }

    /* Column widths */
    .col-student-code { width: 12%; }
    .col-fullname { width: 22%; }
    .col-gender { width: 10%; }
    .col-birthday { width: 12%; }
    .col-phone { width: 15%; }
    .col-address { width: 18%; }
    .col-actions { width: 11%; }

    /* Student code badge */
    .student-code-badge {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 6px 12px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.85rem;
        display: inline-block;
    }

    /* Student name container */
    .student-name-container {
        display: flex;
        flex-direction: column;
    }

    .student-name {
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 2px;
    }

    .student-id {
        font-size: 0.75rem;
        color: #718096;
    }

    /* Gender badges */
    .gender-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
        display: inline-flex;
        align-items: center;
    }

    .gender-male {
        background: #e6f3ff;
        color: #0066cc;
        border: 1px solid #b3d9ff;
    }

    .gender-female {
        background: #ffe6f3;
        color: #cc0066;
        border: 1px solid #ffb3d9;
    }

    /* Text styling */
    .birthday-text, .phone-text, .address-text {
        color: #4a5568;
        font-weight: 500;
    }

    .phone-text {
        font-family: 'Courier New', monospace;
        background: #f7fafc;
        padding: 4px 8px;
        border-radius: 6px;
        border: 1px solid #e2e8f0;
    }

    /* Action buttons */
    .action-buttons {
        display: flex;
        gap: 8px;
        justify-content: center;
        align-items: center;
    }

    .btn-action {
        width: 32px;
        height: 32px;
        border-radius: 8px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 0.85rem;
    }

    .btn-view {
        background: #48bb78;
        color: white;
    }

    .btn-view:hover {
        background: #38a169;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(72, 187, 120, 0.4);
    }

    .btn-edit {
        background: #ed8936;
        color: white;
    }

    .btn-edit:hover {
        background: #dd6b20;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(237, 137, 54, 0.4);
    }

    .btn-delete {
        background: #f56565;
        color: white;
    }

    .btn-delete:hover {
        background: #e53e3e;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(245, 101, 101, 0.4);
    }

    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 30px;
    }

    .pagination .page-link {
        border: 2px solid #e2e8f0;
        color: #5a67d8;
        border-radius: 10px;
        margin: 0 2px;
        padding: 10px 15px;
        transition: all 0.3s ease;
    }

    .pagination .page-item.active .page-link {
        background: linear-gradient(135deg, #5a67d8, #667eea);
        border-color: #5a67d8;
    }

    .pagination .page-link:hover {
        background-color: #edf2f7;
        border-color: #5a67d8;
        transform: translateY(-1px);
    }

    .alert {
        border: none;
        border-radius: 12px;
        padding: 15px 20px;
        margin-bottom: 20px;
        font-weight: 500;
    }

    .alert-success {
        background-color: #c6f6d5;
        color: #22543d;
    }

    .alert-danger {
        background-color: #fed7d7;
        color: #c53030;
    }

    .no-data {
        text-align: center;
        padding: 60px 20px;
        color: #718096;
    }

    .no-data i {
        font-size: 4rem;
        margin-bottom: 20px;
        color: #cbd5e0;
    }

    @@media (max-width: 768px) {
        .management-container {
            margin: 10px;
            border-radius: 15px;
            max-width: 98%;
        }
        
        .management-content {
            padding: 15px;
        }

        .management-header {
            padding: 15px;
        }

        .management-header h1 {
            font-size: 1.25rem;
        }
        
        .action-bar {
            flex-direction: column;
            align-items: stretch;
            gap: 10px;
        }
        
        .search-box {
            max-width: none;
        }
        
        .table-responsive {
            margin: -10px;
            padding: 10px;
        }

        .table thead th,
        .table tbody td {
            padding: 8px 5px;
            font-size: 0.85rem;
        }

        .btn-success, .btn-warning, .btn-danger {
            padding: 6px 8px;
            font-size: 0.75rem;
        }
    }
</style>

<div class="retro-card corner-decorated">
    <div class="retro-card-header">
        <h2 class="retro-card-title"><i class="fas fa-user-graduate"></i> Quản lý học viên</h2>
    </div>

    <div class="retro-card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="retro-alert retro-alert-success">
                <div class="retro-alert-content">
                    @TempData["SuccessMessage"]
                </div>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="retro-alert retro-alert-danger">
                <div class="retro-alert-content">
                    @TempData["ErrorMessage"]
                </div>
            </div>
        }

        <div class="action-bar">
            <div class="search-box">
                <form asp-action="Index" method="get" class="d-flex w-100">
                    <input type="text" name="search" value="@Model.SearchTerm" placeholder="Tìm kiếm học viên..." class="form-control-retro">
                    <button type="submit" class="btn-retro btn-retro-primary btn-retro-sm">
                        <i class="fas fa-search"></i>
                    </button>
                </form>
            </div>
            <a asp-action="Create" class="btn-retro btn-retro-success">
                <i class="fas fa-plus"></i> Thêm học viên
            </a>
        </div>

        @if (Model.Items.Any())
        {
            <div class="table-responsive">
                <table class="retro-table">
                        <thead>
                            <tr>
                                <th class="col-student-code">
                                    <i class="fas fa-id-badge me-2"></i>Mã học viên
                                </th>
                                <th class="col-fullname">
                                    <i class="fas fa-user me-2"></i>Họ và tên
                                </th>
                                <th class="col-gender">
                                    <i class="fas fa-venus-mars me-2"></i>Giới tính
                                </th>
                                <th class="col-birthday">
                                    <i class="fas fa-birthday-cake me-2"></i>Ngày sinh
                                </th>
                                <th class="col-phone">
                                    <i class="fas fa-phone me-2"></i>Số điện thoại
                                </th>
                                <th class="col-address d-none d-lg-table-cell">
                                    <i class="fas fa-map-marker-alt me-2"></i>Địa chỉ
                                </th>
                                <th class="col-actions text-center">
                                    <i class="fas fa-cogs me-2"></i>Thao tác
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in Model.Items)
                            {
                                <tr>
                                    <td>
                                        <span class="retro-badge">@(student.StudentCode ?? "N/A")</span>
                                    </td>
                                    <td>
                                        <strong>@(student.FullName ?? "Chưa có tên")</strong><br/>
                                        <small style="color: var(--vintage-gray);">ID: @student.StudentId</small>
                                    </td>
                                    <td>
                                        <i class="fas @(student.Sex == "Nam" ? "fa-mars" : "fa-venus")"></i>
                                        @(student.Sex ?? "N/A")
                                    </td>
                                    <td>
                                        @(student.DateOfBirth?.ToString("dd/MM/yyyy") ?? "Chưa có")
                                    </td>
                                    <td>
                                        @(student.PhoneNumber ?? "Chưa có")
                                    </td>
                                    <td class="d-none d-lg-table-cell">
                                        @(string.IsNullOrEmpty(student.Address) ? "Chưa có" : 
                                          (student.Address.Length > 30 ? student.Address.Substring(0, 30) + "..." : student.Address))
                                    </td>
                                    <td>
                                        <div class="table-actions">
                                            <a asp-action="Details" asp-route-id="@student.StudentId" 
                                               class="btn-retro btn-retro-primary btn-retro-sm" title="Chi tiết">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@student.StudentId" 
                                               class="btn-retro btn-retro-warning btn-retro-sm" title="Sửa">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <form asp-action="Delete" asp-route-id="@student.StudentId" method="post" 
                                                  style="display: inline;"
                                                  onsubmit="return confirm('⚠️ Bạn có chắc chắn muốn xóa học viên @student.FullName không?')">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn-retro btn-retro-danger btn-retro-sm" title="Xóa">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            
            @if (Model.TotalPages > 1)
            {
                <div style="margin-top: 2rem;">
                    <nav>
                        <ul class="retro-pagination">
                            @if (Model.HasPrevious)
                            {
                                <li class="retro-pagination-item">
                                    <a class="retro-pagination-link" asp-action="Index" 
                                       asp-route-pageNumber="@(Model.PageNumber - 1)"
                                       asp-route-search="@Model.SearchTerm">
                                        <i class="fas fa-chevron-left"></i>
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                            {
                                <li class="retro-pagination-item">
                                    <a class="retro-pagination-link @(i == Model.PageNumber ? "active" : "")" asp-action="Index" 
                                       asp-route-pageNumber="@i"
                                       asp-route-search="@Model.SearchTerm">@i</a>
                                </li>
                            }

                            @if (Model.HasNext)
                            {
                                <li class="retro-pagination-item">
                                    <a class="retro-pagination-link" asp-action="Index" 
                                       asp-route-pageNumber="@(Model.PageNumber + 1)"
                                       asp-route-search="@Model.SearchTerm">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        }
        else
        {
            <div class="text-center p-4">
                <i class="fas fa-user-graduate" style="font-size: 3rem; color: var(--vintage-gray);"></i>
                <h3 style="margin-top: 1rem;">Không có học viên nào</h3>
                <p>@(string.IsNullOrEmpty(Model.SearchTerm) ? "Chưa có học viên nào được thêm vào hệ thống." : $"Không tìm thấy học viên nào với từ khóa '{Model.SearchTerm}'.")</p>
                <a asp-action="Create" class="btn-retro btn-retro-success mt-3">
                    <i class="fas fa-plus"></i> Thêm học viên đầu tiên
                </a>
            </div>
        }
    </div>
</div>